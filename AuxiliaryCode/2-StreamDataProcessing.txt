#include <stdio.h>
#include <string.h>
#include <stdbool.h>

// strnicmp(str, str, 1);
// scanf("%[^\n]", &Addresses[indexCounter++]);
// printf("%i\n", strlen(Addresses[indexCounter - 1]));

int count_occur_of_character(FILE *src, char input[])
{
    int c = 0;
    int cntCharacters = 0;
    int cntIndex = 0;
    bool printableCharacters[95] = {false}; // 95 = 127chars - 32chars enable o

    while (((c = fgetc(src)) != EOF) && (input != NULL))
    {
        if (c == 10) // Finding enter character
            cntIndex = 0;
        else if ((c >= 32) && (c < 127)) // Protect uderflow array if c-32 < 0
        {
            if ((!(printableCharacters[c - 32])) && (c == input[cntIndex++]))
            {
                cntCharacters++;
                printableCharacters[c - 32] = true;
            }
        }
    }

    for (int index = 32; index < 127; index++)
    {
        if (printableCharacters[index - 32])
            printf("%c, ", index);
    }
    printf("\n");

    return cntCharacters;
}

int count_occur_of_character_from_file(char *filename)
{
    printf("File name = %s\n", filename);
    //(void)filename;
    FILE *source_file = fopen(filename, "r");
    if (source_file == NULL)
    {
        return -1;
    }
    int cnt = count_occur_of_character(source_file, filename);

    fclose(source_file);

    return cnt;
}

int main(int argc, char **argv)
{
    int cnt = 0;
    // char character[100] = argv[1];
    printf("Adress = %s\n", argv[0]);
    printf("Character = %s\n", argv[1]);
    printf("Argc = %i\n", argc);

    if (argc < 2)
        cnt = count_occur_of_character(stdin, argv[1]);
    else
        cnt = count_occur_of_character_from_file(argv[1]);

    printf("%i\n", cnt);
    return 0;
}